<?xml version="1.0" encoding="UTF-8"?>
<Configuration>
    <Appenders>
        <Console name="console" target="SYSTEM_OUT">
            <PatternLayout pattern="%d %5p [%c] %m%n" />
        </Console>
    </Appenders>
    <Loggers>
        <Logger name="java.sql" level="INFO" additivity="false">
            <AppenderRef ref="console" />
        </Logger>
        <Logger name="egovframework" level="DEBUG" additivity="false">
            <AppenderRef ref="console" />
        </Logger>
          <!-- log SQL with timing information, post execution -->
        <Logger name="jdbc.sqltiming" level="INFO" additivity="false">
            <AppenderRef ref="console" />
        </Logger>
        <Logger name="org.springframework" level="INFO" additivity="false">
            <AppenderRef ref="console" />
        </Logger>
		<Logger name="jdbc.sqlonly" additivity="false"> 
	        <level value="DEBUG"/> 
	        <appender-ref ref="console" />
        </Logger>
        <!--  SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. 필요시 open -->
        <Logger name="jdbc.sqltiming" level="ERROR" additivity="false">
            <AppenderRef ref="WARN" />
        </Logger>
        <!--  SQL 결과 조회된 데이터의 table을 로그로 남긴다.(빼도됨) -->
        <Logger name="jdbc.resultsettable" additivity="false"> 
	        <level value="WARN"/> 
	        <appender-ref ref="console"/> 
        </Logger>
        <!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다.--> 
        <Logger name="jdbc.audit" additivity="false"> 
	        <level value="WARN"/> 
	        <appender-ref ref="console"/> 
        </Logger>
        <!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. -->
        <Logger name="jdbc.resultset" additivity="false"> 
	        <level value="WARN"/> 
	        <appender-ref ref="console"/> 
        </Logger>
        <Root level="ERROR">
            <AppenderRef ref="console" />
        </Root>
    </Loggers>
</Configuration>
